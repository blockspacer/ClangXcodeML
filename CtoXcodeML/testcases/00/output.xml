<?xml version="1.0" encoding="UTF-8"?>
<XcodeProgram source="/home/hnagamin/Documents/ClangXcodeML/testcases/00/access_specifier.cpp" language="C" time="2016-03-28 18:43:12">
  <typeTable>
    <pointerType type="Pointer0" ref="Class0"/>
    <pointerType type="Pointer1" ref="Class1"/>
    <classType type="Class0">
      <name fullName="N::A">A</name>
      <symbols>
        <id type="int" access="private">
          <name fullName="N::A::x">x</name>
        </id>
        <id type="int" access="private">
          <name fullName="N::A::y">y</name>
        </id>
        <id type="Function0" sclass="extern_def" access="public">
          <name fullName="N::A::getX">getX</name>
        </id>
        <id type="Function0" sclass="extern_def" access="public">
          <name fullName="N::A::getY">getY</name>
        </id>
        <id type="Class1" access="protected">
          <name fullName="N::A::b">b</name>
        </id>
      </symbols>
    </classType>
    <classType type="Class1">
      <name fullName="N::A::B">B</name>
      <symbols>
        <id type="int" access="private">
          <name fullName="N::A::B::x">x</name>
        </id>
        <id type="Function0" sclass="extern_def" access="private">
          <operator fullName="N::A::B::operator*">pointerRef</operator>
        </id>
      </symbols>
    </classType>
    <classType type="Class2">
      <name fullName="N::M::C">C</name>
      <symbols>
        <id type="int" access="private">
          <name fullName="N::M::C::x">x</name>
        </id>
      </symbols>
    </classType>
    <functionType type="Function0" return_type="int">
      <params/>
    </functionType>
  </typeTable>
  <globalSymbols/>
  <globalDeclarations>
    <Decl_Namespace>
      <classDecl type="Class0">
        <id type="int">
          <name fullName="N::A::x">x</name>
        </id>
        <id type="int">
          <name fullName="N::A::y">y</name>
        </id>
        <functionDefinition>
          <name fullName="N::A::getX">getX</name>
          <symbols/>
          <params/>
          <body>
            <compoundStatement>
              <symbols/>
              <declarations/>
              <body>
                <returnStatement>
                  <memberRef type="int" member="x">
                    <thisExpr/>
                  </memberRef>
                </returnStatement>
              </body>
            </compoundStatement>
          </body>
        </functionDefinition>
        <functionDecl>
          <name fullName="N::A::getY">getY</name>
        </functionDecl>
        <classDecl type="Class1">
          <id type="int">
            <name fullName="N::A::B::x">x</name>
          </id>
          <functionDefinition>
            <operator fullName="N::A::B::operator*">pointerRef</operator>
            <symbols/>
            <params/>
            <body>
              <compoundStatement>
                <symbols/>
                <declarations/>
                <body>
                  <returnStatement>
                    <memberRef type="int" member="x">
                      <thisExpr/>
                    </memberRef>
                  </returnStatement>
                </body>
              </compoundStatement>
            </body>
          </functionDefinition>
        </classDecl>
        <id type="Class1">
          <name fullName="N::A::b">b</name>
        </id>
      </classDecl>
      <Decl_Namespace>
        <classDecl type="Class2"/>
        <functionDefinition>
          <name fullName="N::M::f">f</name>
          <symbols/>
          <params/>
          <body>
            <compoundStatement>
              <symbols/>
              <declarations/>
              <body>
                <returnStatement>
                  <intConstant type="int">42</intConstant>
                </returnStatement>
              </body>
            </compoundStatement>
          </body>
        </functionDefinition>
      </Decl_Namespace>
    </Decl_Namespace>
    <functionDefinition>
      <NestedNameSpecifier_TypeSpec>
        <NestedNameSpecifier_Namespace/>
      </NestedNameSpecifier_TypeSpec>
      <name fullName="N::A::getY">getY</name>
      <symbols/>
      <params/>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <memberRef type="int" member="y">
                <thisExpr/>
              </memberRef>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
  </globalDeclarations>
</XcodeProgram>
