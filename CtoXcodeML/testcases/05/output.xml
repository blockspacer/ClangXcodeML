<?xml version="1.0" encoding="UTF-8"?>
<XcodeProgram source="/home/hnagamin/Documents/ClangXcodeML/testcases/05/operator_overloading.cpp" language="C" time="2016-03-28 18:43:12">
  <typeTable>
    <basicType type="Basic0" is_const="1" name="int"/>
    <pointerType type="Pointer0" ref="Class0"/>
    <pointerType type="Pointer1" ref="int"/>
    <pointerType type="Pointer2" ref="Class1"/>
    <pointerType type="Pointer3"/>
    <pointerType type="Pointer4" ref="Function5"/>
    <pointerType type="Pointer5" ref="Function4"/>
    <classType type="Class0">
      <name fullName="Ratio">Ratio</name>
      <symbols>
        <id type="Function0" sclass="extern_def" access="public"/>
        <id type="Function1" sclass="extern_def" access="public">
          <name fullName="Ratio::numer">numer</name>
        </id>
        <id type="Function1" sclass="extern_def" access="public">
          <name fullName="Ratio::denom">denom</name>
        </id>
        <id type="Function2" sclass="extern_def" access="public">
          <operator fullName="Ratio::operator++">postIncrExpr</operator>
        </id>
        <id type="Function3" sclass="extern_def" access="public">
          <operator fullName="Ratio::operator++">preIncrExpr</operator>
        </id>
        <id type="Function2" sclass="extern_def" access="public">
          <operator fullName="Ratio::operator--">postDecrExpr</operator>
        </id>
        <id type="Function3" sclass="extern_def" access="public">
          <operator fullName="Ratio::operator--">preIncrExpr</operator>
        </id>
        <id type="int" access="private">
          <name fullName="Ratio::a">a</name>
        </id>
        <id type="int" access="private">
          <name fullName="Ratio::b">b</name>
        </id>
      </symbols>
    </classType>
    <classType type="Class1" is_const="1" name="Class0"/>
    <functionType type="Function0" return_type="void">
      <params>
        <name type="int">x</name>
        <name type="int">y</name>
      </params>
    </functionType>
    <functionType type="Function1" return_type="int">
      <params/>
    </functionType>
    <functionType type="Function2" return_type="Class0">
      <params>
        <name type="int"></name>
      </params>
    </functionType>
    <functionType type="Function3" return_type="Class0">
      <params/>
    </functionType>
    <functionType type="Function4" return_type="Class0">
      <params>
        <name type="Pointer3">a</name>
      </params>
    </functionType>
    <functionType type="Function5" return_type="Class0">
      <params>
        <name type="Pointer3">a</name>
        <name type="Pointer3">b</name>
      </params>
    </functionType>
  </typeTable>
  <globalSymbols>
    <id type="Function4" sclass="extern_def">
      <operator fullName="operator-">unaryMinusExpr</operator>
    </id>
    <id type="Function5" sclass="extern_def">
      <operator fullName="operator+">plusExpr</operator>
    </id>
    <id type="Function5" sclass="extern_def">
      <operator fullName="operator-">minusExpr</operator>
    </id>
    <id type="Function5" sclass="extern_def">
      <operator fullName="operator*">mulExpr</operator>
    </id>
    <id type="Function5" sclass="extern_def">
      <operator fullName="operator/">divExpr</operator>
    </id>
    <id type="Function5" sclass="extern_def">
      <operator fullName="operator%">modExpr</operator>
    </id>
  </globalSymbols>
  <globalDeclarations>
    <classDecl type="Class0"/>
    <functionDefinition>
      <constructor/>
      <symbols>
        <id type="int" sclass="param">
          <name>x</name>
        </id>
        <id type="int" sclass="param">
          <name>y</name>
        </id>
      </symbols>
      <params>
        <name type="int">x</name>
        <name type="int">y</name>
      </params>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <exprStatement>
              <assignExpr type="int">
                <memberRef type="int" member="a">
                  <thisExpr/>
                </memberRef>
                <Var type="int" scope="param">x</Var>
              </assignExpr>
            </exprStatement>
            <exprStatement>
              <assignExpr type="int">
                <memberRef type="int" member="b">
                  <thisExpr/>
                </memberRef>
                <Var type="int" scope="param">y</Var>
              </assignExpr>
            </exprStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <name fullName="Ratio::numer">numer</name>
      <symbols/>
      <params/>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <memberRef type="Basic0" member="a">
                <thisExpr/>
              </memberRef>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <name fullName="Ratio::denom">denom</name>
      <symbols/>
      <params/>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <memberRef type="Basic0" member="b">
                <thisExpr/>
              </memberRef>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDecl>
      <operator fullName="Ratio::operator++">postIncrExpr</operator>
    </functionDecl>
    <functionDefinition>
      <operator fullName="Ratio::operator++">preIncrExpr</operator>
      <symbols/>
      <params/>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <exprStatement>
              <asgPlusExpr type="int">
                <memberRef type="int" member="a">
                  <thisExpr/>
                </memberRef>
                <memberRef type="int" member="b">
                  <thisExpr/>
                </memberRef>
              </asgPlusExpr>
            </exprStatement>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <pointerRef type="Class0">
                  <thisExpr/>
                </pointerRef>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDecl>
      <operator fullName="Ratio::operator--">postDecrExpr</operator>
    </functionDecl>
    <functionDefinition>
      <operator fullName="Ratio::operator--">preIncrExpr</operator>
      <symbols/>
      <params/>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <exprStatement>
              <asgMinusExpr type="int">
                <memberRef type="int" member="a">
                  <thisExpr/>
                </memberRef>
                <memberRef type="int" member="b">
                  <thisExpr/>
                </memberRef>
              </asgMinusExpr>
            </exprStatement>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <pointerRef type="Class0">
                  <thisExpr/>
                </pointerRef>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <NestedNameSpecifier_TypeSpec/>
      <operator fullName="Ratio::operator++">postIncrExpr</operator>
      <symbols>
        <id type="int" sclass="param"/>
      </symbols>
      <params/>
      <name type="int"></name>
      <body>
        <compoundStatement>
          <symbols>
            <id type="Class0" sclass="auto">
              <name>self</name>
            </id>
          </symbols>
          <declarations>
            <varDecl>
              <name>self</name>
              <value>
                <Stmt_CXXConstructExprClass>
                  <pointerRef type="Class0">
                    <thisExpr/>
                  </pointerRef>
                </Stmt_CXXConstructExprClass>
              </value>
            </varDecl>
          </declarations>
          <body>
            <exprStatement>
              <asgPlusExpr type="int">
                <memberRef type="int" member="a">
                  <thisExpr/>
                </memberRef>
                <memberRef type="int" member="b">
                  <thisExpr/>
                </memberRef>
              </asgPlusExpr>
            </exprStatement>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Var type="Class0" scope="local">self</Var>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <NestedNameSpecifier_TypeSpec/>
      <operator fullName="Ratio::operator--">postDecrExpr</operator>
      <symbols>
        <id type="int" sclass="param"/>
      </symbols>
      <params/>
      <name type="int"></name>
      <body>
        <compoundStatement>
          <symbols>
            <id type="Class0" sclass="auto">
              <name>self</name>
            </id>
          </symbols>
          <declarations>
            <varDecl>
              <name>self</name>
              <value>
                <Stmt_CXXConstructExprClass>
                  <pointerRef type="Class0">
                    <thisExpr/>
                  </pointerRef>
                </Stmt_CXXConstructExprClass>
              </value>
            </varDecl>
          </declarations>
          <body>
            <exprStatement>
              <asgMinusExpr type="int">
                <memberRef type="int" member="a">
                  <thisExpr/>
                </memberRef>
                <memberRef type="int" member="b">
                  <thisExpr/>
                </memberRef>
              </asgMinusExpr>
            </exprStatement>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Var type="Class0" scope="local">self</Var>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <operator fullName="operator-">unaryMinusExpr</operator>
      <symbols>
        <id type="Pointer3" sclass="param">
          <name>a</name>
        </id>
      </symbols>
      <params/>
      <name type="Pointer3">a</name>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Stmt_MaterializeTemporaryExprClass>
                  <Stmt_CXXTemporaryObjectExprClass>
                    <unaryMinusExpr type="int">
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="numer">
                          <varAddr type="Pointer2" scope="param">a</varAddr>
                        </memberRef>
                      </functionCall>
                    </unaryMinusExpr>
                    <functionCall type="int">
                      <memberRef type="_bound_member_function_type_" member="denom">
                        <varAddr type="Pointer2" scope="param">a</varAddr>
                      </memberRef>
                    </functionCall>
                  </Stmt_CXXTemporaryObjectExprClass>
                </Stmt_MaterializeTemporaryExprClass>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <operator fullName="operator+">plusExpr</operator>
      <symbols>
        <id type="Pointer3" sclass="param">
          <name>a</name>
        </id>
        <id type="Pointer3" sclass="param">
          <name>b</name>
        </id>
      </symbols>
      <params/>
      <name type="Pointer3">a</name>
      <name type="Pointer3">b</name>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Stmt_MaterializeTemporaryExprClass>
                  <Stmt_CXXTemporaryObjectExprClass>
                    <plusExpr type="int">
                      <mulExpr type="int">
                        <functionCall type="int">
                          <memberRef type="_bound_member_function_type_" member="numer">
                            <varAddr type="Pointer2" scope="param">a</varAddr>
                          </memberRef>
                        </functionCall>
                        <functionCall type="int">
                          <memberRef type="_bound_member_function_type_" member="denom">
                            <varAddr type="Pointer2" scope="param">b</varAddr>
                          </memberRef>
                        </functionCall>
                      </mulExpr>
                      <mulExpr type="int">
                        <functionCall type="int">
                          <memberRef type="_bound_member_function_type_" member="denom">
                            <varAddr type="Pointer2" scope="param">a</varAddr>
                          </memberRef>
                        </functionCall>
                        <functionCall type="int">
                          <memberRef type="_bound_member_function_type_" member="numer">
                            <varAddr type="Pointer2" scope="param">b</varAddr>
                          </memberRef>
                        </functionCall>
                      </mulExpr>
                    </plusExpr>
                    <mulExpr type="int">
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="denom">
                          <varAddr type="Pointer2" scope="param">a</varAddr>
                        </memberRef>
                      </functionCall>
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="denom">
                          <varAddr type="Pointer2" scope="param">b</varAddr>
                        </memberRef>
                      </functionCall>
                    </mulExpr>
                  </Stmt_CXXTemporaryObjectExprClass>
                </Stmt_MaterializeTemporaryExprClass>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <operator fullName="operator-">minusExpr</operator>
      <symbols>
        <id type="Pointer3" sclass="param">
          <name>a</name>
        </id>
        <id type="Pointer3" sclass="param">
          <name>b</name>
        </id>
      </symbols>
      <params/>
      <name type="Pointer3">a</name>
      <name type="Pointer3">b</name>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Stmt_MaterializeTemporaryExprClass>
                  <functionCall>
                    <operator>plusExpr</operator>
                    <Var type="Class1" scope="param">a</Var>
                    <Stmt_MaterializeTemporaryExprClass>
                      <functionCall>
                        <operator>unaryMinusExpr</operator>
                        <Var type="Class1" scope="param">b</Var>
                      </functionCall>
                    </Stmt_MaterializeTemporaryExprClass>
                  </functionCall>
                </Stmt_MaterializeTemporaryExprClass>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <operator fullName="operator*">mulExpr</operator>
      <symbols>
        <id type="Pointer3" sclass="param">
          <name>a</name>
        </id>
        <id type="Pointer3" sclass="param">
          <name>b</name>
        </id>
      </symbols>
      <params/>
      <name type="Pointer3">a</name>
      <name type="Pointer3">b</name>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Stmt_MaterializeTemporaryExprClass>
                  <Stmt_CXXTemporaryObjectExprClass>
                    <mulExpr type="int">
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="numer">
                          <varAddr type="Pointer2" scope="param">a</varAddr>
                        </memberRef>
                      </functionCall>
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="numer">
                          <varAddr type="Pointer2" scope="param">b</varAddr>
                        </memberRef>
                      </functionCall>
                    </mulExpr>
                    <mulExpr type="int">
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="denom">
                          <varAddr type="Pointer2" scope="param">a</varAddr>
                        </memberRef>
                      </functionCall>
                      <functionCall type="int">
                        <memberRef type="_bound_member_function_type_" member="denom">
                          <varAddr type="Pointer2" scope="param">b</varAddr>
                        </memberRef>
                      </functionCall>
                    </mulExpr>
                  </Stmt_CXXTemporaryObjectExprClass>
                </Stmt_MaterializeTemporaryExprClass>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <operator fullName="operator/">divExpr</operator>
      <symbols>
        <id type="Pointer3" sclass="param">
          <name>a</name>
        </id>
        <id type="Pointer3" sclass="param">
          <name>b</name>
        </id>
      </symbols>
      <params/>
      <name type="Pointer3">a</name>
      <name type="Pointer3">b</name>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Stmt_MaterializeTemporaryExprClass>
                  <functionCall>
                    <operator>mulExpr</operator>
                    <Var type="Class1" scope="param">a</Var>
                    <Stmt_MaterializeTemporaryExprClass>
                      <Stmt_CXXTemporaryObjectExprClass>
                        <functionCall type="int">
                          <memberRef type="_bound_member_function_type_" member="denom">
                            <varAddr type="Pointer2" scope="param">b</varAddr>
                          </memberRef>
                        </functionCall>
                        <functionCall type="int">
                          <memberRef type="_bound_member_function_type_" member="numer">
                            <varAddr type="Pointer2" scope="param">b</varAddr>
                          </memberRef>
                        </functionCall>
                      </Stmt_CXXTemporaryObjectExprClass>
                    </Stmt_MaterializeTemporaryExprClass>
                  </functionCall>
                </Stmt_MaterializeTemporaryExprClass>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
    <functionDefinition>
      <operator fullName="operator%">modExpr</operator>
      <symbols>
        <id type="Pointer3" sclass="param">
          <name>a</name>
        </id>
        <id type="Pointer3" sclass="param">
          <name>b</name>
        </id>
      </symbols>
      <params/>
      <name type="Pointer3">a</name>
      <name type="Pointer3">b</name>
      <body>
        <compoundStatement>
          <symbols/>
          <declarations/>
          <body>
            <returnStatement>
              <Stmt_CXXConstructExprClass>
                <Stmt_MaterializeTemporaryExprClass>
                  <Stmt_CXXTemporaryObjectExprClass>
                    <intConstant type="int">0</intConstant>
                    <intConstant type="int">1</intConstant>
                  </Stmt_CXXTemporaryObjectExprClass>
                </Stmt_MaterializeTemporaryExprClass>
              </Stmt_CXXConstructExprClass>
            </returnStatement>
          </body>
        </compoundStatement>
      </body>
    </functionDefinition>
  </globalDeclarations>
</XcodeProgram>
